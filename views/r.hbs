<!doctype html>
<html>
<head>
    <title>Socket.IO chat</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font: 13px Helvetica, Arial;
        }

        form {
            background: #000;
            padding: 3px;
            position: fixed;
            bottom: 0;
            width: 100%;
        }

        form input {
            border: 0;
            padding: 10px;
            width: 90%;
            margin-right: .5%;
        }

        form button {
            width: 9%;
            background: rgb(130, 224, 255);
            border: none;
            padding: 10px;
        }

        #messages {
            list-style-type: none;
            margin: 0;
            padding: 0;
            height: 460px;
        }

        #messages li {
            padding: 5px 10px;
        }

        #messages li:nth-child(odd) {
            background: #eee;
        }
    </style>
</head>
<link rel="stylesheet" href="/bower_components/bootstrap/dist/css/bootstrap.min.css">
<script src="/bower_components/adapter.js/adapter.js"></script>
<script src="/bower_components/jquery/dist/jquery.min.js"></script>
<!--<script src="/bower_components/requirejs/require.js"></script>-->
<script src="/bower_components/bootstrap/dist/js/bootstrap.min.js"></script>
<body>

<div class="container-fluid" style="max-height: 640px;">
    <div class="row">
        <div class="col-sm-3">
            <div class="well well-lg">
                <ul class="list-group">
                    <li class="list-group-item">
                        <span id="heartBeat" class="glyphicon glyphicon-heart pull-left"
                              style="font-size:1.5em;"></span>
                        <h4 id="serverState"><b>state</b></h4>
                    </li>
                    <li class="list-group-item">
                        <div class="">
                            <span>Socket ID:</span> <h4 id="sid"></h4>
                            <span>Socket NSP:</span> <h4 id="snsp"></h4>
                            <span>Socket Room:</span> <h4 id="srid"></h4>
                        </div>
                    </li>
                </ul>
            </div>
            <!--<ul class="list-group" id="users">-->
            <ul class="list-group" id="peers">
            </ul>
        </div>
        <!--<div class="col-md-6 well">
        </div>-->
        <div class="col-sm-6">
            <ul id="messages" style="height: 375px;overflow-y: scroll;"></ul>
            <input class="form-control" id="m" autocomplete="off"/>
            <button id="send">Send</button>
            <span class="btn-group">

            <button id="present">Present</button>
            <button id="view">View</button>
            <button id="stop">stop</button>
            </span>
        </div>
        <div class="col-sm-3">
            <video id="vid" height="240" width="240"></video>
            <video id="loopBack" height="240" width="240"></video>
        </div>
    </div>
</div>
<!--<script src="/js/bundle.js"></script>-->
<!--<script>-->
<!--var peer = require('simple-pper')-->
<!---->
<!--//</script>-->

<script src="/js/simplepeer.min.js"></script>
<script src="/js/socket.io.js"></script>
<script src="/js/EventEmitter.js"></script>
<script src="/js/PeerClient.js"></script>
<script>
    var url = '/{{roomname}}'
    var username = '{{username}}'
    var socket = io()

    $(document).ready(function () {




// Session Description Protocol constraints:
// - use both audio and video regardless of what devices are available
//var sdpConstraints = {'mandatory': {
//  'OfferToReceiveAudio':true,
//  'OfferToReceiveVideo':true }};


        var sdpConstraints = webrtcDetectedBrowser === 'firefox' ?
        {'offerToReceiveAudio': false, 'offerToReceiveVideo': false} :
        {'mandatory': {'OfferToReceiveAudio': false, 'OfferToReceiveVideo': false}};
        var constraints = {video: true, audio: true}


//        console.log(url)
        socket = io(url)
        var data = []
        var peer = null

        var pc = new PeerClient({
            channel: url,
            username: username,
            socket: socket,
            constraints: constraints
        })


        $('#send').click(function () {
            var msg = $('#m').val()

//                self.socket.emit('message', {username: socket.id, data: msg})self.
            pc.send(msg)
        })

        $('#present').click(function () {

//            console.log('start-presenting')
//            navigator.getUserMedia(constraints, gotPresenterMedia, mediaError);
            pc.broadcast()
        })

        $('#view').click(function () {
            pc.viewBroadcast()
        })

        $('#stop').click(function () {
            try {
                pc.disconnect()
            } catch (e) {
                console.log(e)
            }
        })
    })
</script>
</body>
</html>
